services:
  frontend:
    build:
      context: ./dashboard-ui
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./dashboard-ui:/app
      - frontend_node_modules:/app/node_modules
      - frontend_next:/app/.next
    depends_on:
      - backend
    networks:
      - retail-net
    command: npm run dev

  backend:
    build:
      context: ./dashboard-backend
    env_file:
      - ./dashboard-backend/.env
    environment:
      - ENV=development
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - retail-net

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    env_file:
      - ./dashboard-backend/.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - retail-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U atriva -d atrv-retail"]
      interval: 5s
      timeout: 5s
      retries: 5

  ai_inference:
    build: ./services/ai-inference
    ports:
      - "8001:8001"
    env_file:
      - ./services/ai-inference/.env
    volumes:
      - shared-temp-data:/app/shared
    networks:
      - retail-net

  video_pipeline:
    build: ./services/video-pipeline
    ports:
      - "8002:8002"
    env_file:
      - ./services/video-pipeline/.env
    volumes:
      - shared-temp-data:/app/shared
    networks:
      - retail-net

  #analytics_engine:
  #  build: ./services/analytics-engine
  #  ports:
  #    - "8003:8003"
  #  networks:
  #    - retail-net

volumes:
  pgdata:
  shared-temp-data:
  frontend_node_modules:
  frontend_next:

networks:
  retail-net:
    driver: bridge